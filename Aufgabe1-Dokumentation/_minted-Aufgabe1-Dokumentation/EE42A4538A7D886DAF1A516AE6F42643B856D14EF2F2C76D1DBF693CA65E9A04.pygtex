\begin{Verbatim}[commandchars=\\\{\}]
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{The MIT License (MIT)}

\PYG{l+s+sd}{Copyright (c) 2016 Christian August Reksten\PYGZhy{}Monsen \PYGZam{} 2019 Lukas Rost}

\PYG{l+s+sd}{Permission is hereby granted, free of charge, to any person obtaining a copy}
\PYG{l+s+sd}{of this software and associated documentation files (the \PYGZdq{}Software\PYGZdq{}), to deal}
\PYG{l+s+sd}{in the Software without restriction, including without limitation the rights}
\PYG{l+s+sd}{to use, copy, modify, merge, publish, distribute, sublicense, and/or sell}
\PYG{l+s+sd}{copies of the Software, and to permit persons to whom the Software is}
\PYG{l+s+sd}{furnished to do so, subject to the following conditions:}

\PYG{l+s+sd}{The above copyright notice and this permission notice shall be included in all}
\PYG{l+s+sd}{copies or substantial portions of the Software.}

\PYG{l+s+sd}{THE SOFTWARE IS PROVIDED \PYGZdq{}AS IS\PYGZdq{}, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR}
\PYG{l+s+sd}{IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,}
\PYG{l+s+sd}{FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE}
\PYG{l+s+sd}{AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER}
\PYG{l+s+sd}{LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,}
\PYG{l+s+sd}{OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE}
\PYG{l+s+sd}{SOFTWARE.}
\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{k+kn}{from} \PYG{n+nn}{timeit} \PYG{k+kn}{import} \PYG{n}{default\PYGZus{}timer}
\PYG{k+kn}{from} \PYG{n+nn}{sys} \PYG{k+kn}{import} \PYG{n}{stdout}\PYG{p}{,} \PYG{n}{version\PYGZus{}info}
\PYG{k+kn}{from} \PYG{n+nn}{multiprocessing} \PYG{k+kn}{import} \PYG{n}{Pool}
\PYG{k+kn}{from} \PYG{n+nn}{tqdm} \PYG{k+kn}{import} \PYG{n}{tqdm}
\PYG{k+kn}{from} \PYG{n+nn}{warnings} \PYG{k+kn}{import} \PYG{n}{warn}

\PYG{k+kn}{from} \PYG{n+nn}{pyvisgraph.graph} \PYG{k+kn}{import} \PYG{n}{Graph}\PYG{p}{,} \PYG{n}{Edge}\PYG{p}{,} \PYG{n}{Point}
\PYG{k+kn}{from} \PYG{n+nn}{pyvisgraph.shortest\PYGZus{}path} \PYG{k+kn}{import} \PYG{n}{shortest\PYGZus{}path}
\PYG{k+kn}{from} \PYG{n+nn}{pyvisgraph.visible\PYGZus{}vertices} \PYG{k+kn}{import} \PYG{n}{visible\PYGZus{}vertices}\PYG{p}{,} \PYG{n}{point\PYGZus{}in\PYGZus{}polygon}

\PYG{k+kn}{import} \PYG{n+nn}{math}

\PYG{n}{PYTHON3} \PYG{o}{=} \PYG{n}{version\PYGZus{}info}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{o}{==} \PYG{l+m+mi}{3}
\PYG{k}{if} \PYG{n}{PYTHON3}\PYG{p}{:}
    \PYG{n+nb}{xrange} \PYG{o}{=} \PYG{n+nb}{range}
    \PYG{k+kn}{import} \PYG{n+nn}{pickle}


\PYG{k}{class} \PYG{n+nc}{VisGraph}\PYG{p}{(}\PYG{n+nb}{object}\PYG{p}{):}

    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{vlisa}\PYG{p}{,}\PYG{n}{vbus}\PYG{p}{,}\PYG{n}{lisa\PYGZus{}p}\PYG{p}{):}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph} \PYG{o}{=} \PYG{n+nb+bp}{None}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph} \PYG{o}{=} \PYG{n+nb+bp}{None}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vlisa} \PYG{o}{=} \PYG{n}{vlisa}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vbus} \PYG{o}{=} \PYG{n}{vbus}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{lisa\PYGZus{}point} \PYG{o}{=} \PYG{n}{lisa\PYGZus{}p}

    \PYG{k}{def} \PYG{n+nf}{load}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{filename}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Sichtbarkeitsgraph laden. \PYGZdq{}\PYGZdq{}\PYGZdq{}}
        \PYG{k}{with} \PYG{n+nb}{open}\PYG{p}{(}\PYG{n}{filename}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}rb\PYGZsq{}}\PYG{p}{)} \PYG{k}{as} \PYG{n}{load}\PYG{p}{:}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph} \PYG{o}{=} \PYG{n}{pickle}\PYG{o}{.}\PYG{n}{load}\PYG{p}{(}\PYG{n}{load}\PYG{p}{)}

    \PYG{k}{def} \PYG{n+nf}{save}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{filename}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Sichtbarkeitsgraph speichern. \PYGZdq{}\PYGZdq{}\PYGZdq{}}
        \PYG{k}{with} \PYG{n+nb}{open}\PYG{p}{(}\PYG{n}{filename}\PYG{p}{,} \PYG{l+s+s1}{\PYGZsq{}wb\PYGZsq{}}\PYG{p}{)} \PYG{k}{as} \PYG{n}{output}\PYG{p}{:}
            \PYG{n}{pickle}\PYG{o}{.}\PYG{n}{dump}\PYG{p}{((}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph}\PYG{p}{),} \PYG{n}{output}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)}

    \PYG{k}{def} \PYG{n+nf}{build}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n+nb}{input}\PYG{p}{,} \PYG{n}{status}\PYG{o}{=}\PYG{n+nb+bp}{True}\PYG{p}{):} 
        \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Sichtbarkeitsgraph aus Liste von Polygonen generieren. Ein Polygon ist eine Liste von Punkten. \PYGZdq{}\PYGZdq{}\PYGZdq{}}

        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph} \PYG{o}{=} \PYG{n}{Graph}\PYG{p}{(}\PYG{n+nb}{input}\PYG{p}{)}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph} \PYG{o}{=} \PYG{n}{Graph}\PYG{p}{([])}

        \PYG{n}{points} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph}\PYG{o}{.}\PYG{n}{get\PYGZus{}points}\PYG{p}{()}
        \PYG{n}{batch\PYGZus{}size} \PYG{o}{=} \PYG{l+m+mi}{10} 

        \PYG{k}{for} \PYG{n}{batch} \PYG{o+ow}{in} \PYG{n}{tqdm}\PYG{p}{([}\PYG{n}{points}\PYG{p}{[}\PYG{n}{i}\PYG{p}{:}\PYG{n}{i} \PYG{o}{+} \PYG{n}{batch\PYGZus{}size}\PYG{p}{]}
                            \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{xrange}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{points}\PYG{p}{),} \PYG{n}{batch\PYGZus{}size}\PYG{p}{)],}
                        \PYG{n}{disable}\PYG{o}{=}\PYG{o+ow}{not} \PYG{n}{status}\PYG{p}{):}
            \PYG{k}{for} \PYG{n}{edge} \PYG{o+ow}{in} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}vis\PYGZus{}graph}\PYG{p}{(}\PYG{n}{batch}\PYG{p}{):}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph}\PYG{o}{.}\PYG{n}{add\PYGZus{}edge}\PYG{p}{(}\PYG{n}{edge}\PYG{p}{)}

    \PYG{k}{def} \PYG{n+nf}{find\PYGZus{}visible}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{point}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Von einem Punkt aus sichtbare Punkte finden.\PYGZdq{}\PYGZdq{}\PYGZdq{}}

        \PYG{k}{return} \PYG{n}{visible\PYGZus{}vertices}\PYG{p}{(}\PYG{n}{point}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph}\PYG{p}{)}

    \PYG{k}{def} \PYG{n+nf}{shortest\PYGZus{}path}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Kürzesten Pfad (als Punkte\PYGZhy{}Liste) vom Lisa\PYGZhy{}Punkt aus finden. \PYGZdq{}\PYGZdq{}\PYGZdq{}}

        \PYG{k}{return} \PYG{n}{shortest\PYGZus{}path}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{lisa\PYGZus{}point}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vlisa}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vbus}\PYG{p}{)}

    \PYG{k}{def} \PYG{n+nf}{get\PYGZus{}visgraph}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{):}
        \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{visgraph}

    \PYG{k}{def} \PYG{n+nf}{\PYGZus{}vis\PYGZus{}graph\PYGZus{}wrapper}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{args}\PYG{p}{):}
        \PYG{k}{try}\PYG{p}{:}
            \PYG{k}{return} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}vis\PYGZus{}graph}\PYG{p}{(}\PYG{o}{*}\PYG{n}{args}\PYG{p}{)}
        \PYG{k}{except} \PYG{n+ne}{KeyboardInterrupt}\PYG{p}{:}
            \PYG{k}{pass}

\PYG{k}{def} \PYG{n+nf}{\PYGZus{}vis\PYGZus{}graph}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{points}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Sichtbarkeitsgraph für points berechnen. Dabei wird für jeden Punkt der Companion\PYGZhy{}Punkt berechnet. Anschließend wird dieser Punkt bei der Berechnung der visible vertices mit betrachtet. \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{n}{visible\PYGZus{}edges} \PYG{o}{=} \PYG{p}{[]}
    \PYG{k}{for} \PYG{n}{p1} \PYG{o+ow}{in} \PYG{n}{points}\PYG{p}{:}
        \PYG{n}{dest\PYGZus{}point\PYGZus{}y} \PYG{o}{=} \PYG{n}{p1}\PYG{o}{.}\PYG{n}{y} \PYG{o}{+} \PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vlisa} \PYG{o}{/} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vbus}\PYG{p}{)} \PYG{o}{*} \PYG{p}{(}\PYG{l+m+mi}{1} \PYG{o}{/} \PYG{n}{math}\PYG{o}{.}\PYG{n}{sqrt}\PYG{p}{(}\PYG{l+m+mi}{1} \PYG{o}{\PYGZhy{}} \PYG{p}{((}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vlisa} \PYG{o}{*} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vlisa}\PYG{p}{)} \PYG{o}{/} \PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vbus} \PYG{o}{*} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{vbus}\PYG{p}{))))} \PYG{o}{*} \PYG{n}{p1}\PYG{o}{.}\PYG{n}{x}
        \PYG{n}{dest\PYGZus{}point} \PYG{o}{=} \PYG{n}{Point}\PYG{p}{(}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{n+nb}{round}\PYG{p}{(}\PYG{n}{dest\PYGZus{}point\PYGZus{}y}\PYG{p}{,}\PYG{l+m+mi}{2}\PYG{p}{),} \PYG{n}{polygon\PYGZus{}id}\PYG{o}{=}\PYG{l+s+s2}{\PYGZdq{}Y\PYGZdq{}}\PYG{p}{)}
        \PYG{k}{for} \PYG{n}{p2} \PYG{o+ow}{in} \PYG{n}{visible\PYGZus{}vertices}\PYG{p}{(}\PYG{n}{p1}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{graph}\PYG{p}{,} \PYG{n}{origin}\PYG{o}{=}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{lisa\PYGZus{}point}\PYG{p}{,}\PYG{n}{destination}\PYG{o}{=}\PYG{n}{dest\PYGZus{}point}\PYG{p}{):}
            \PYG{n}{visible\PYGZus{}edges}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n}{Edge}\PYG{p}{(}\PYG{n}{p1}\PYG{p}{,} \PYG{n}{p2}\PYG{p}{))}
    \PYG{k}{return} \PYG{n}{visible\PYGZus{}edges}
\end{Verbatim}
